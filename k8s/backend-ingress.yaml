apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ducklake-backend-ingress
  namespace: default
  labels:
    app: ducklake-backend
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # SSE specific annotations
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    # Enable CORS for frontend integration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Accept,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: ducklake-api.local  # Change this for your domain
    http:
      paths:
      # API endpoints
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ducklake-backend-service
            port:
              number: 80
      # SSE endpoints (with special handling)
      - path: /events
        pathType: Prefix
        backend:
          service:
            name: ducklake-backend-service
            port:
              number: 80
  # TLS configuration (uncomment for HTTPS)
  # tls:
  # - hosts:
  #   - ducklake-api.local
  #   secretName: ducklake-backend-tls

---
# Alternative: ClusterIP service for ingress (if using LoadBalancer type)
apiVersion: v1
kind: Service
metadata:
  name: ducklake-backend-clusterip
  namespace: default
  labels:
    app: ducklake-backend
spec:
  type: ClusterIP
  selector:
    app: ducklake-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      name: http 